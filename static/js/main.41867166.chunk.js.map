{"version":3,"sources":["components/NavBar.js","components/Header.js","components/TodoItem.js","components/TodoList.js","components/InputTodo.js","pages/SinglePage.js","functionBased/About.js","functionBased/NotMatch.js","components/TodoContainer.js","index.js"],"names":["NavBar","useState","navbarOpen","setNavbarOpen","className","onClick","prev","style","color","width","height","id","path","text","map","link","to","activeClassName","exact","Header","padding","lineHeight","fontSize","fontWeight","marginBottom","textTransform","textAlign","TodoItem","state","editing","handleEditing","setState","handleUpdatedDone","event","key","viewMode","editMode","this","display","props","todo","completed","title","styles","item","onDoubleClick","type","checkbox","checked","onChange","handleChangeProps","deleteTodoProps","fontStyle","opacity","textDecoration","textInput","value","e","setUpdate","target","onKeyDown","React","Component","TodoList","todos","InputTodo","name","handleSubmit","preventDefault","trim","addTodoProps","alert","onSubmit","placeholder","SinglePage","slug","useParams","aboutContent","description","find","About","useRouteMatch","url","NotMatch","TodoContainer","handleChange","prevState","addTodoItem","newTodo","uuidv4","updatedTitle","delTodo","filter","temp","localStorage","getItem","loadedTools","JSON","parse","prevProps","stringify","setItem","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.41867166.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { MdClose } from 'react-icons/md'\r\nimport { FiMenu } from 'react-icons/fi'\r\n\r\nconst NavBar = () => {\r\n\r\n    const [ navbarOpen, setNavbarOpen ] = useState(false)\r\n\r\n    const links = [\r\n        {\r\n            id: 1,\r\n            path: '/',\r\n            text: 'Home'\r\n        },\r\n        {\r\n            id: 2,\r\n            path: '/about',\r\n            text: 'About'\r\n        }\r\n    ]\r\n\r\n    // Methods\r\n    const handleToggle = () => {\r\n        setNavbarOpen(prev => !prev)\r\n    }\r\n\r\n    const closeMenu = () => {\r\n        setNavbarOpen(false)\r\n    }\r\n    // End of Methods\r\n\r\n    return (\r\n        <nav className=\"navBar\">\r\n            <button onClick={handleToggle}>\r\n                {\r\n                    navbarOpen ? (\r\n                        <MdClose style={{ color: '#fff', width: '40px', height: '40px' }} />\r\n                    ) : (\r\n                        <FiMenu style={{ color: '#7b7b7b', width: '40px', height: '40px' }} />\r\n                    )\r\n                }\r\n            </button>\r\n            <ul className={`menuNav ${navbarOpen ? 'showMenu' : ''}`}>\r\n                {links.map(link => {\r\n                    return (\r\n                        <li key={link.id}>\r\n                            <NavLink \r\n                                to={link.path} \r\n                                activeClassName=\"active-link\" \r\n                                onClick={() => closeMenu()}\r\n                                exact\r\n                            >{link.text}</NavLink>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\n\r\nconst Header = () => {\r\n    const headerStyle = {\r\n        padding: '20px 0',\r\n        lineHeight: '1.5.em'\r\n    }\r\n\r\n\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1\r\n                style={{\r\n                    fontSize: '6rem',\r\n                    fontWeight: '600',\r\n                    marginBottom: '2rem',\r\n                    lineHeight: '1rem',\r\n                    color: '#ececec',\r\n                    textTransform: 'lowercase',\r\n                    textAlign: 'center'\r\n                }}\r\n            >Todos</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\n// CSS Styles\r\nimport styles from './TodoItem.modules.css'\r\n\r\n// Class based component\r\nclass TodoItem extends React.Component {\r\n    // declaring a state(variables)\r\n    state = {\r\n        editing: false\r\n    }\r\n\r\n    // Methods\r\n    handleEditing = () => {\r\n        this.setState({\r\n            editing: true\r\n        })\r\n    }\r\n\r\n    handleUpdatedDone = (event) => {\r\n        if(event.key === 'Enter') {\r\n            this.setState({ editing: false })\r\n        }\r\n    }\r\n\r\n    // End of Methods\r\n    render() {\r\n        // render variables \r\n        let viewMode = {}\r\n        let editMode = {}\r\n\r\n        if(this.state.editing) {\r\n            viewMode.display = \"none\"\r\n        } else {\r\n            editMode.display = \"none\"\r\n        }\r\n\r\n        const completeStyle = {\r\n            fontStyle: 'italic',\r\n            color: '#595959',\r\n            opacity: 0.4,\r\n            textDecoration: 'line-through'\r\n        }\r\n\r\n        const { completed, id, title } = this.props.todo\r\n\r\n        return (\r\n            <li className={styles.item}>\r\n                <div onDoubleClick={this.handleEditing} style={viewMode}>\r\n                    <input \r\n                        type=\"checkbox\" \r\n                        className={styles.checkbox}\r\n                        checked={completed}\r\n                        onChange={() => this.props.handleChangeProps(id)}\r\n                    />\r\n                    <button onClick={() => this.props.deleteTodoProps(id)}>\r\n                        Delete\r\n                    </button>\r\n                    <span style={completed ? completeStyle : null}>\r\n                        {title}\r\n                    </span>\r\n                </div>\r\n                <input \r\n                    type=\"text\" \r\n                    style={editMode} \r\n                    className={styles.textInput} \r\n                    value={title}\r\n                    onChange={e => this.props.setUpdate(e.target.value, id)}\r\n                    onKeyDown={this.handleUpdatedDone}\r\n                />\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\n// Function based component\r\n// function TodoItem(props) {\r\n//     return <li>{props.todo.title}</li>\r\n// }\r\n\r\nexport default TodoItem","import React from 'react'\r\n\r\n// Components\r\nimport TodoItem from './TodoItem'\r\n\r\nclass TodoList extends React.Component {\r\n    render() {\r\n        return (\r\n            // Get the data from parent using props\r\n            <ul>\r\n                {this.props.todos.map(todo => (\r\n                    // \r\n                    <TodoItem \r\n                        key={todo.id} \r\n                        todo={todo} \r\n                        handleChangeProps={this.props.handleChangeProps}\r\n                        deleteTodoProps={this.props.deleteTodoProps}\r\n                        setUpdate={this.props.setUpdate}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList","import React, { Component } from 'react'\r\n\r\nclass InputTodo extends Component {\r\n    // declaring a state(variables)\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    // Methods\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(this.state.title.trim()) {\r\n            this.props.addTodoProps(this.state.title)\r\n            this.setState({\r\n                title: ''\r\n            })\r\n        } else {\r\n            alert('Please write item')\r\n        }\r\n    }\r\n\r\n    // End of Methods\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className=\"form-container\">\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"input-text\"\r\n                    placeholder=\"Add Todo . . .\" \r\n                    name='title'\r\n                    value={this.state.title}\r\n                    onChange={this.onChange} />\r\n                <button className=\"input-submit\">Submit</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputTodo","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst SinglePage = () => {\r\n    const aboutData = [\r\n        {\r\n            slug: \"about-app\",\r\n            title: \"About the App\",\r\n            description:\r\n            \"In this app, you can add, delete, submit and edit items. To edit items, simply double click on it. Once you are done, press the enter key to resubmit. This app will persist your data in the browser local storage. So whether you reload, close your app or reopened it, you still have access to your to-dos items.\",\r\n        },\r\n        {\r\n            slug: \"about-author\",\r\n            title: \"About the Author\",\r\n            description:\r\n            \"This app was developed by Ibas Majid, a self-taught web developer and a technical writer. He is opened to freelance Gig. So go ahead and connect with ibas on Twitter @ibaslogic.\",\r\n        },\r\n    ]\r\n    const { slug } = useParams()\r\n    const aboutContent = aboutData.find(item => item.slug === slug)\r\n    const { title, description } = aboutContent\r\n\r\n    return (\r\n        <div className='main__content'>\r\n            <h1>{title}</h1>\r\n            <h2>{description}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SinglePage","import React from 'react'\r\nimport { Link, useRouteMatch, Route } from 'react-router-dom'\r\nimport SinglePage from '../pages/SinglePage'\r\n\r\nconst About = () => {\r\n    const { url, path } = useRouteMatch()\r\n\r\n    return (\r\n        <div className='about__content'>\r\n            <ul className='about__list'>\r\n                <li>\r\n                    <Link to={`${url}/about-app`}>About App</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to={`${url}/about-author`}>About Author</Link>\r\n                </li>\r\n            </ul>\r\n            <Route path={`${path}/:slug`}>\r\n                <SinglePage />\r\n            </Route>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React from 'react'\r\n\r\nconst NotMatch = () => {\r\n    return (\r\n        <h1>This is an error page</h1>\r\n    )\r\n}\r\n\r\nexport default NotMatch","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\n\r\n// Components\r\nimport NavBar from './NavBar'\r\nimport Header from './Header'\r\nimport TodoList from './TodoList'\r\nimport InputTodo from './InputTodo'\r\nimport About from '../functionBased/About'\r\nimport NotMatch from '../functionBased/NotMatch'\r\n\r\n// Class named TodoContainer\r\nclass TodoContainer extends React.Component {\r\n    // declaring a state(variables)\r\n    state = {\r\n        todos: []\r\n    }\r\n\r\n    // React Life Cycle Methods\r\n    // created in VueJS / Form Load (Visual Basic)\r\n    componentDidMount() {\r\n        // fetch('https://jsonplaceholder.typicode.com/todos').then(res => {\r\n        //     res.json().then(data => this.setState({ todos: data }))\r\n        // })\r\n        const temp = localStorage.getItem('todos')\r\n        const loadedTools = JSON.parse(temp)\r\n        if(loadedTools) {\r\n            this.setState({ todos: loadedTools })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevState.todos !== this.state.todos) {\r\n            const temp = JSON.stringify(this.state.todos)\r\n            localStorage.setItem('todos', temp)\r\n        }\r\n    }\r\n    \r\n    // End of React Life Cycle\r\n\r\n    // Methods\r\n    handleChange = (id) => {\r\n        // Update set data toggled by child/grandchild component\r\n        this.setState(prevState => {\r\n            return {\r\n                todos: prevState.todos.map(todo => {\r\n                    if(todo.id === id) {\r\n                        return {\r\n                            ...todo,\r\n                            completed: !todo.completed\r\n                        }\r\n                    }\r\n                    return todo\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    addTodoItem = (title) => {\r\n        const newTodo = {\r\n            id: uuidv4(),\r\n            title: title,\r\n            completed: false\r\n        }\r\n        this.setState({\r\n            todos: [...this.state.todos, newTodo]\r\n        })\r\n    }\r\n\r\n    setUpdate = (updatedTitle, id) => {\r\n        this.setState({\r\n            todos: this.state.todos.map(todo => {\r\n                if(todo.id === id) {\r\n                    todo.title = updatedTitle\r\n                }\r\n                return todo\r\n            })\r\n        })\r\n    }\r\n\r\n    delTodo = (id) => {\r\n        this.setState({\r\n            todos: [\r\n                ...this.state.todos.filter(todo => {\r\n                    return todo.id !== id\r\n                })\r\n            ]\r\n        })\r\n    }\r\n    // End of Methods\r\n    render() {\r\n        return (\r\n            // you can also use <React.Fragment></React.Fragment> tag\r\n            // <>\r\n            //     <h1>Hello React World</h1>\r\n            //     <p>This is a react component</p>\r\n            // </>\r\n            // <ul>\r\n            //     {this.state.todos.map(todo => (\r\n            //     <li>{todo.title}</li>\r\n            //     ))}\r\n            // </ul>\r\n            //</div>pass state data to props\r\n            <>\r\n                <NavBar />\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <div className=\"container\">\r\n                            <div className=\"inner\">\r\n                                <Header />\r\n                                <InputTodo addTodoProps={this.addTodoItem} />\r\n                                <TodoList \r\n                                    todos={this.state.todos} \r\n                                    handleChangeProps={this.handleChange}\r\n                                    deleteTodoProps={this.delTodo} \r\n                                    setUpdate={this.setUpdate}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Route>\r\n                    <Route path=\"/about\">\r\n                        <About />\r\n                    </Route>\r\n                    <Route path=\"*\">\r\n                        <NotMatch />\r\n                    </Route>\r\n                </Switch>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoContainer","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\n// CSS Styles\r\nimport './App.css'\r\n\r\n// Components\r\nimport TodoContainer from './components/TodoContainer'\r\n\r\n// Using strict mode to acivate checks and log warnings\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <TodoContainer />\r\n        </Router>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}